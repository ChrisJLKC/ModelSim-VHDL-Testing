
---> Example 1 <---

entity vector_decoder is

	port
	(
		-- Input ports
		S	: in  bit_vector(2 downto 0);		--3-bit select

		-- Output ports
		Y	: out bit_vector(7 downto 0)		--output
	);
end vector_decoder;

architecture circuit1 of vector_decoder is

begin

	Y <=	"00000001" when S = "000" else
			"00000010" when S = "001" else
			"00000100" when S = "010" else
			"00001000" when S = "011" else
			"00010000" when S = "100" else
			"00100000" when S = "101" else
			"01000000" when S = "110" else
			"10000000";				
end circuit1;

---> Example 2 <---

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;

entity uop_dlatch is

	port 
	(
		D	   : in std_logic;	-- D input							
		EN     : in std_logic;	-- GO - count the number of leading 1's (level triggered)
		R      : in std_logic;  -- Active LOW Reset
		Q      : out std_logic 	-- Q output
	);

end entity;

architecture dlatch_v1 of uop_dlatch  is
begin
	--I am going to use behavioural logic
	process (D,EN,R) is
		--Local declarations
	begin
		if (R = '1') then 
			if (EN = '1') then
				Q <= D;
			end if;				
		else
			Q <= '0';
		end if;
	end process;

end dlatch_v1;
